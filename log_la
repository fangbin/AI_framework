[mman] DW:env2apron: 
        eid-1 -> [0]
       []
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Converting CABS->CIL
[kernel] Parsing ../mem copy/bench/la/lamain.c (with preprocessing)
[kernel] Converting CABS->CIL
[mman] Welcome to the Mman plugin
[mman] Reading data abstraction
[mman] 'cty' definition: ok
[mman] feature 'cal': undefined
[mman] feature 'cbe': ok
[mman] feature 'cen': ok
[mman] feature 'fbe': ok
[mman] feature 'fen': ok
[mman] feature 'csz': ok
[mman] feature 'cn': undefined
[mman] feature 'cp': undefined
[mman] feature 'cdt': undefined
[mman] feature 'fn': ok
[mman] feature 'fp': undefined
[mman] feature 'cf': undefined
[mman] feature 'cpf': undefined
[mman] method 'minit': ok
[mman] method 'malloc': ok
[mman] method 'minit': ok
[mman] method 'mrealoc': undefined
[mman] --------------------------------------------
[mman] Analysed code in full.c
[mman] Initialize global environment
[mman] Add feature 'csz' for 'id:4'
[mman] Add feature 'fn' for 'id:4'
[mman] Add '_heapstart' of type HEADER (aka struct hdr)
[mman] Add feature 'csz' for 'id:7'
[mman] Add feature 'fn' for 'id:7'
[mman] Add '_heapend' of type HEADER (aka struct hdr)
[mman] Add 'frhd' of type HEADER * (aka struct hdr *)
[mman] Add 'memleft' of type short (aka short)
[mman] Initialize penv for 'laAlloc'
[mman] Add 'nbytes' of type int (aka int)
[mman] Add 'nxt' of type HEADER * (aka struct hdr *)
[mman] Add 'prev' of type HEADER * (aka struct hdr *)
[mman] Add 'nunits' of type int (aka int)
[mman] Initialize penv for 'laFree'
[mman] Add 'ap' of type void * (aka void *)
[mman] Add 'nxt' of type HEADER * (aka struct hdr *)
[mman] Add 'prev' of type HEADER * (aka struct hdr *)
[mman] Add 'f' of type HEADER * (aka struct hdr *)
[mman] Initialize penv for 'laInit'
[mman] Initialize penv for 'main'
[mman] Add 'man' of type void * (aka void *)
[mman] Add 'p1' of type void * (aka void *)
[mman] Add 'p2' of type void * (aka void *)
[mman] Initialize penv for 'warm_boot'
[mman] Add 'str' of type char * (aka char *)
[mman] stmt2penvs:
       (1) s_1 (@line 35) -> e_4
       (1) s_4 (@line 66) -> e_2
       (1) s_5 (@line 67) -> e_2
       (1) s_7 (@line 71) -> e_2
       (1) s_8 (@line 75) -> e_2
       (1) s_9 (@line 76) -> e_2
       (1) s_10 (@line 77) -> e_2
       (1) s_12 (@line 80) -> e_2
       (1) s_13 (@line 81) -> e_2
       (1) s_14 (@line 82) -> e_2
       (1) s_15 (@line 84) -> e_2
       (1) s_18 (@line 93) -> e_2
       (1) s_19 (@line 93) -> e_2
       (1) s_20 (@line 93) -> e_2
       (1) s_22 (@line 93) -> e_2
       (1) s_24 (@line 93) -> e_2
       (1) s_25 (@line 93) -> e_2
       (1) s_26 (@line 93) -> e_2
       (1) s_27 (@line 94) -> e_2
       (1) s_29 (@line 94) -> e_2
       (1) s_30 (@line 95) -> e_2
       (1) s_31 (@line 96) -> e_2
       (1) s_33 (@line 97) -> e_2
       (1) s_34 (@line 106) -> e_2
       (1) s_35 (@line 107) -> e_2
       (1) s_39 (@line 93) -> e_2
       (1) s_40 (@line 93) -> e_2
       (1) s_41 (@line 120) -> e_2
       (1) s_42 (@line 121) -> e_2
       (1) s_44 (@line 122) -> e_2
       (1) s_45 (@line 123) -> e_2
       (1) s_46 (@line 124) -> e_2
       (1) s_47 (@line 126) -> e_2
       (1) s_50 (@line 140) -> e_1
       (1) s_51 (@line 152) -> e_1
       (1) s_52 (@line 152) -> e_1
       (1) s_53 (@line 152) -> e_1
       (1) s_55 (@line 152) -> e_1
       (1) s_56 (@line 152) -> e_1
       (1) s_57 (@line 153) -> e_1
       (1) s_59 (@line 153) -> e_1
       (1) s_61 (@line 154) -> e_1
       (1) s_62 (@line 155) -> e_1
       (1) s_63 (@line 156) -> e_1
       (1) s_64 (@line 157) -> e_1
       (1) s_66 (@line 159) -> e_1
       (1) s_67 (@line 160) -> e_1
       (1) s_68 (@line 162) -> e_1
       (1) s_69 (@line 164) -> e_1
       (1) s_71 (@line 168) -> e_1
       (1) s_73 (@line 152) -> e_1
       (1) s_74 (@line 152) -> e_1
       (1) s_75 (@line 178) -> e_1
       (1) s_77 (@line 187) -> e_0
       (1) s_78 (@line 188) -> e_0
       (1) s_79 (@line 192) -> e_0
       (1) s_80 (@line 194) -> e_0
       (1) s_81 (@line 196) -> e_0
       (1) s_82 (@line 197) -> e_0
       (1) s_85 (@line 8) -> e_3
       (1) s_86 (@line 8) -> e_3
       (1) s_87 (@line 9) -> e_3
       (1) s_88 (@line 10) -> e_3
       (1) s_89 (@line 11) -> e_3
       (1) s_90 (@line 12) -> e_3
       (1) s_91 (@line 13) -> e_3
       (1) s_92 (@line 14) -> e_3
       (1) s_93 (@line 15) -> e_3
       (1) s_95 (@line 36) -> e_4
       (1) s_97 (@line 85) -> e_2
       (1) s_98 (@line 109) -> e_2
       (1) s_99 (@line 130) -> e_2
       (1) s_101 (@line 168) -> e_1
       (1) s_102 (@line 178) -> e_1
       (1) s_104 (@line 202) -> e_0
       (1) s_106 (@line 15) -> e_3
[mman] envs:
       penv_0 = (2,[12] 
       {	(0)__null;	(1)__hole;	(2)__hli;	(3)__hst;	(4)_heapstart;
       	(5)c4__csz;	(6)c4__fn;	(7)_heapend;	(8)c7__csz;	(9)c7__fn;
       	(10)frhd;	(11)memleft;} )
       penv_1 = (2,[16] 
       {	(0)__null;	(1)__hole;	(2)__hli;	(3)__hst;	(4)_heapstart;
       	(5)c4__csz;	(6)c4__fn;	(7)_heapend;	(8)c7__csz;	(9)c7__fn;
       	(10)frhd;	(11)memleft;	(12)f1677_nbytes;	(13)nxt;	(14)prev;
       	(15)nunits;} )
       penv_2 = (2,[16] 
       {	(0)__null;	(1)__hole;	(2)__hli;	(3)__hst;	(4)_heapstart;
       	(5)c4__csz;	(6)c4__fn;	(7)_heapend;	(8)c7__csz;	(9)c7__fn;
       	(10)frhd;	(11)memleft;	(12)f1671_ap;	(13)nxt;	(14)prev;
       	(15)f;} )
       penv_3 = (2,[15] 
       {	(0)__null;	(1)__hole;	(2)__hli;	(3)__hst;	(4)_heapstart;
       	(5)c4__csz;	(6)c4__fn;	(7)_heapend;	(8)c7__csz;	(9)c7__fn;
       	(10)frhd;	(11)memleft;	(12)man;	(13)p1;	(14)p2;
       } )
       penv_4 = (2,[13] 
       {	(0)__null;	(1)__hole;	(2)__hli;	(3)__hst;	(4)_heapstart;
       	(5)c4__csz;	(6)c4__fn;	(7)_heapend;	(8)c7__csz;	(9)c7__fn;
       	(10)frhd;	(11)memleft;	(12)f1666_str;} )
[mman] --------------------------------------------
[mman] Analysing the application starting at 'MAIN'
[mman] --------------------------------------------
[mman] Analysing the application starting at 'MAIN'
[mman] DF:Computing initial state
[mman] DF:Initial_state_stmt (sid:85)
[mman] init_global: struct init
[mman] transform expression: (struct hdr *)0
[mman] transform expression: 0
[mman] build cast(4) of (4)
[mman] transform expression: (unsigned int)0
[mman] transform expression: 0
[mman] build cast(4) of (4)
[mman] init_global: struct init
[mman] replace_vinfo _heapend/_heapstart in fn(_heapstart)
[mman] transform expression: (struct hdr *)0
[mman] transform expression: 0
[mman] build cast(4) of (4)
[mman] replace_vinfo _heapend/_heapstart in (csz(_heapstart) / 8)
[mman] replace_vinfo _heapend/_heapstart in 8
[mman] replace_vinfo _heapend/_heapstart in csz(_heapstart)
[mman] transform expression: (unsigned int)0
[mman] transform expression: 0
[mman] build cast(4) of (4)
[mman] transform expression: (short)0
[mman] transform expression: 0
[mman] build cast(2) of (2)
[mman] DF:init_global_avals: fn(_heapstart),
[mman] DF:init_global_avals: csz(_heapstart),
[mman] DF:init_global_avals: fn(_heapend),
[mman] DF:init_global_avals: csz(_heapend),
[mman] DF:init_global_avals: memleft,
[mman] DF:init_global_aexps: 0,
[mman] DF:init_global_aexps: 0,
[mman] DF:init_global_aexps: 0,
[mman] DF:init_global_aexps: 0,
[mman] DF:init_global_aexps: 0,
[mman] DF:struct fiels : fn(_heapstart),
[mman] DF:struct fiels : csz(_heapstart),
[mman] DF:struct fiels : fn(_heapend),
[mman] DF:struct fiels : csz(_heapend),
[mman] DF:Computing global values
[mman] MV:init_globals
[mman] -------------------initialize eshape-------------------
[mman] MV:penv: penv_3 = (2,[15] 
       {	(0)__null;	(1)__hole;	(2)__hli;	(3)__hst;	(4)_heapstart;
       	(5)c4__csz;	(6)c4__fn;	(7)_heapend;	(8)c7__csz;	(9)c7__fn;
       	(10)frhd;	(11)memleft;	(12)man;	(13)p1;	(14)p2;
       } )
[mman] initialise symbolic environment
[mman] create symbolic environment
[mman] MV:senv: senv_1 = @(0,penv_3,
       [4] 
       {	(1)__null;	(2)__hole;	(3)__hli;	(4)__hst;
       } @)
[mman] MV:penv: (4)_heapstart is a chunk
[mman] get pv in senv
[mman] MV:penv: (7)_heapend is a chunk
[mman] get pv in senv
[mman] new senv: senv_2 = @(0,penv_3,
       [6] 
       {	(1)__null;	(2)__hole;	(3)__hli;	(4)__hst;
       	(5)_heapstart;	(6)_heapend;} @)
[mman] MV:penv: (4)_heapstart is a chunk
[mman] get pv in senv
[mman] ENV:its feature (4,csz)
[mman] ENV:its feature (4,fn)
[mman] MV:penv: (7)_heapend is a chunk
[mman] get pv in senv
[mman] ENV:its feature (7,csz)
[mman] ENV:its feature (7,fn)
[mman] new senv: senv_3 = @(0,penv_3,
       [10] 
       {	(1)__null;	(2)__hole;	(3)__hli;	(4)__hst;
       	(5)_heapstart;	(6)_heapend;	(7)c4__csz;	(8)c4__fn;	(9)c7__csz;
       	(10)c7__fn;} @)
[mman] old value  ({peid:3}Top)
[mman] DW:env2apron: 
        eid3 -> [1]
       [0> __hli:int 1> __hole:int 2> __hst:int 3> __null:int 4> _heapend:int 5> _heapstart:int 6> c4__csz:int 7> c4__fn:int 8> c7__csz:int 9> c7__fn:int 10> frhd:int 11> man:int 12> memleft:int 13> p1:int 14> p2:int]
[mman] new value:
         ({peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top 
       )
[mman] -------------------eshape initialized-------------------
[mman] doing assign
[mman] do_assigns: fn(_heapstart):=0
[mman] do_assigns: csz(_heapstart):=0
[mman] do_assigns: fn(_heapend):=0
[mman] do_assigns: csz(_heapend):=0
[mman] do_assigns: memleft:=0
[mman] on ({peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top 
       )
[mman] MV:do_assign_set, exsh:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:do_assign_set, dw value:{eid_3}top
[mman] do_assign_one....
[mman] --------- 
        MV:evaluate alval:fn(_heapstart)
[mman] MSH:evalL afeat
[mman] MSH:after to_senv_lval:sv_4 in senv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_4 on stack ...
[mman] MSH:location of 4 is 5...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:after evalL is (fn(sv_5))
[mman] --------- 
        MV:evaluate alval:csz(_heapstart)
[mman] MSH:evalL afeat
[mman] MSH:after to_senv_lval:sv_4 in senv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_4 on stack ...
[mman] MSH:location of 4 is 5...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:after evalL is (csz(sv_5))
[mman] --------- 
        MV:evaluate alval:fn(_heapend)
[mman] MSH:evalL afeat
[mman] MSH:after to_senv_lval:sv_7 in senv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_7 on stack ...
[mman] MSH:location of 7 is 6...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:after evalL is (fn(sv_6))
[mman] --------- 
        MV:evaluate alval:csz(_heapend)
[mman] MSH:evalL afeat
[mman] MSH:after to_senv_lval:sv_7 in senv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_7 on stack ...
[mman] MSH:location of 7 is 6...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:after evalL is (csz(sv_6))
[mman] --------- 
        MV:evaluate alval:memleft
[mman] MSH:after to_senv_lval:sv_11 in senv
[mman] MV:after evalL is (sv_11)
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] MV:after evalE is (0)
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] MV:after evalE is (0)
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] MV:after evalE is (0)
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] MV:after evalE is (0)
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] MV:after evalE is (0)
[mman] MV:after evaluation of loction:
[mman] MV: do_assign_one sv_11:=0
[mman] MV: do_assign_one csz(sv_6):=0
[mman] MV: do_assign_one fn(sv_6):=0
[mman] MV: do_assign_one csz(sv_5):=0
[mman] MV: do_assign_one fn(sv_5):=0
[mman] MV:do mutate
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] left alval:fn(sv_5)
[mman] MSH:left value svi:5 ...
[mman] MSH:svinfoL:(5)_heapstart
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:after mutation, dw value:{eid_3}top
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] left alval:csz(sv_5)
[mman] MSH:left value svi:5 ...
[mman] MSH:svinfoL:(5)_heapstart
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:after mutation, dw value:{eid_3}top
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] left alval:fn(sv_6)
[mman] MSH:left value svi:6 ...
[mman] MSH:svinfoL:(6)_heapend
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:after mutation, dw value:{eid_3}top
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] left alval:csz(sv_6)
[mman] MSH:left value svi:6 ...
[mman] MSH:svinfoL:(6)_heapend
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:after mutation, dw value:{eid_3}top
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] left alval:sv_11
[mman] MSH:left value svi:11 ...
[mman] MSH:svinfoL:(11)memleft
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:after mutation, dw value:{eid_3}top
[mman] MV:finish mutating, Some
[mman] MV:after do_assign_one
[mman] MV:after assign_set is Some()
[mman] MV:assign_done, 
        value: ({peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top 
       )
[mman] MV:meet_exp....
[mman] MV:meet_exp_set....
[mman] MV:meet_exp_set, exsh:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:meet_exp_set, dw value:{eid_3}top
[mman] MV:meet_exp_one....
[mman] MSH:do guard...
[mman] MSH:constraints:__hli>=0
[mman] MSH:do guard_one...
[mman] MSH:constraint:__hli>=0
[mman] MSH:evalE:__hli op 0
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: __hli...
[mman] MSH:evalE_lval AVar:(3)__hli
[mman] MSH:evalE_svid...svid 3
[mman] MSH:evalE_svid, no need to look in stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE:sv_3 op 0
[mman] MSH:evalE, no unfolding needed....
[mman] MSH:sv_3>=0
[mman] MSH: a constraint on locations, only comparison accepted...
[mman] MSH:guard_geq...
[mman] MSH:guard_geq, Some g ...
[mman] MSH:guard_one return constraint:sv_3>=0
[mman] MSH:guard_one return value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:no need to unfold...
[mman] MV:no constraints on data...
[mman] MV:after meet_exp_set is Some()
[mman] MV:finish meet_exp.
[mman] MV:meet_exp....
[mman] MV:meet_exp_set....
[mman] MV:meet_exp_set, exsh:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:meet_exp_set, dw value:{eid_3}top
[mman] MV:meet_exp_one....
[mman] MSH:do guard...
[mman] MSH:constraints:man>=0
[mman] MSH:constraints:p1>=0
[mman] MSH:constraints:p2>=0
[mman] MSH:do guard_one...
[mman] MSH:constraint:man>=0
[mman] MSH:evalE:man op 0
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: man...
[mman] MSH:evalE_lval AVar:(12)man
[mman] MSH:evalE_svid...svid 12
[mman] MSH:evalE_svid, inspect the stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE:sv_12 op 0
[mman] MSH:evalE, no unfolding needed....
[mman] MSH:sv_12>=0
[mman] MSH: a constraint on locations, only comparison accepted...
[mman] MSH:guard_geq...
[mman] MSH:guard_geq, Some g ...
[mman] MSH:guard_one return constraint:sv_12>=0
[mman] MSH:guard_one return value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MSH:do guard_one...
[mman] MSH:constraint:p1>=0
[mman] MSH:evalE:p1 op 0
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: p1...
[mman] MSH:evalE_lval AVar:(13)p1
[mman] MSH:evalE_svid...svid 13
[mman] MSH:evalE_svid, inspect the stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE:sv_13 op 0
[mman] MSH:evalE, no unfolding needed....
[mman] MSH:sv_13>=0
[mman] MSH: a constraint on locations, only comparison accepted...
[mman] MSH:guard_geq...
[mman] MSH:guard_geq, Some g ...
[mman] MSH:guard_one return constraint:sv_13>=0
[mman] MSH:guard_one return value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MSH:do guard_one...
[mman] MSH:constraint:p2>=0
[mman] MSH:evalE:p2 op 0
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: p2...
[mman] MSH:evalE_lval AVar:(14)p2
[mman] MSH:evalE_svid...svid 14
[mman] MSH:evalE_svid, inspect the stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE:sv_14 op 0
[mman] MSH:evalE, no unfolding needed....
[mman] MSH:sv_14>=0
[mman] MSH: a constraint on locations, only comparison accepted...
[mman] MSH:guard_geq...
[mman] MSH:guard_geq, Some g ...
[mman] MSH:guard_one return constraint:sv_14>=0
[mman] MSH:guard_one return value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:no need to unfold...
[mman] MV:no constraints on data...
[mman] MV:after meet_exp_set is Some()
[mman] MV:finish meet_exp.
[mman] DF:initial_state {peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top
[mman] transfer_stmt_main sid: 85 on 
        {peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top 
       '
[mman] s.skind: Instr2
[mman] function called: laInit'
[mman] do_call: laInit(...)
[mman] forget __retres,... in {peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top
[mman] Unify penvs 3, 0
[mman] MV:meet_exp....
[mman] MV:meet_exp_set....
[mman] MV:meet_exp_set, exsh:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:meet_exp_set, dw value:{eid_3}top
[mman] MV:meet_exp_one....
[mman] MSH:do guard...
[mman] MV:no need to unfold...
[mman] MV:after meet_exp_set is Some()
[mman] MV:finish meet_exp.
[mman] compute_fun_aux....
[mman] compute_fun_aux...dataflow...
[mman] transfer_stmt_main sid: 77 on 
        {peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top 
       '
[mman] s.skind: Instr2
[mman] function called: sbrk'
[mman] transfer_sbrk: /* sid:77 */
                      _heapstart.ptr = (struct hdr *)sbrk(65360);
       on {peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top
[mman] transform expression: 65360
[mman] transform_lval2var: _heapstart.ptr
[mman] feature2exph: _heapstart->ptr to fn
[mman] transform_sbrk: fn(_heapstart):=__hole[sbrk(65360)]
[mman] to: fn(_heapstart):=__hli
[mman] to: __hli:=(__hli + 65360)
[mman] doing assign
[mman] do_assigns: fn(_heapstart):=__hli
[mman] do_assigns: __hli:=(__hli + 65360)
[mman] on ({peid:3}eshape: (4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
        
       	 dwords:{eid_3}top 
       )
[mman] MV:do_assign_set, exsh:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:do_assign_set, dw value:{eid_3}top
[mman] do_assign_one....
[mman] --------- 
        MV:evaluate alval:fn(_heapstart)
[mman] MSH:evalL afeat
[mman] MSH:after to_senv_lval:sv_4 in senv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_4 on stack ...
[mman] MSH:location of 4 is 5...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:after evalL is (fn(sv_5))
[mman] --------- 
        MV:evaluate alval:__hli
[mman] MSH:after to_senv_lval:sv_1 in senv
[mman] MV:after evalL is (sv_1)
[mman] --------- 
        evaluate aexp:__hli
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: __hli...
[mman] MSH:evalE_lval AVar:(3)__hli
[mman] MSH:evalE_svid...svid 3
[mman] MSH:evalE_svid, no need to look in stack...
[mman] MV:after evalE is (sv_3)
[mman] --------- 
        evaluate aexp:(__hli + 65360)
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: __hli...
[mman] MSH:evalE_lval AVar:(3)__hli
[mman] MSH:evalE_svid...svid 3
[mman] MSH:evalE_svid, no need to look in stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE is Some ...
[mman] MV:after evalE is None
[mman] MV:after evaluation of loction:
[mman] MV: do_assign_one different length
[mman] MV:do mutate
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] left alval:fn(sv_5)
[mman] MSH:left value svi:5 ...
[mman] MSH:svinfoL:(5)_heapstart
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:sv_3
[mman] failure: Undefined address
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (7)_heapend |-> (6)_heapend, 
       chd((5)_heapstart)[csz:(1)__hole,fn:(1)__hole,] * chd((6)_heapend)[csz:(1)__hole,fn:(1)__hole,] * emp,
[mman] MV:after mutation, dw value:{eid_3}top
[mman] failure: Unexpected exception.
                Please submit bug report (Ref. "Invalid_argument("List.iter2")").
[kernel] Current source was: /Users/yuezhuang/Documents/projects/mem copy/bench/la/lamalloc.c:187
         The full backtrace is:
         Raised at file "src/kernel_services/plugin_entry_points/log.ml", line 583, characters 30-31
         Called from file "src/kernel_services/plugin_entry_points/log.ml", line 577, characters 9-16
         Re-raised at file "src/kernel_services/plugin_entry_points/log.ml", line 580, characters 15-16
         Called from file "queue.ml", line 134, characters 6-20
         Called from file "src/kernel_internals/runtime/boot.ml", line 37, characters 4-20
         Called from file "src/kernel_services/cmdline_parameters/cmdline.ml", line 787, characters 2-9
         Called from file "src/kernel_services/cmdline_parameters/cmdline.ml", line 817, characters 18-64
         Called from file "src/kernel_services/cmdline_parameters/cmdline.ml", line 228, characters 4-8
         
         Plug-in mman aborted: internal error.
         Please report as 'crash' at http://bts.frama-c.com/.
         Your Frama-C version is Aluminium-20160502.
         Note that a version and a backtrace alone often do not contain enough
         information to understand the bug. Guidelines for reporting bugs are at:
         http://bts.frama-c.com/dokuwiki/doku.php?id=mantis:frama-c:bug_reporting_guidelines
