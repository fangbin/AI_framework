[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing ../mem copy/bench/la/lamain.c (with preprocessing)
[mman] Welcome to the Mman plugin
[mman] Reading data abstraction
[mman] 'cty' definition: ok
[mman] feature 'cal': undefined
[mman] feature 'cbe': ok
[mman] feature 'cen': ok
[mman] feature 'fbe': ok
[mman] feature 'fen': ok
[mman] feature 'csz': ok
[mman] feature 'cn': undefined
[mman] feature 'cp': undefined
[mman] feature 'cdt': undefined
[mman] feature 'fn': ok
[mman] feature 'fp': undefined
[mman] feature 'cf': undefined
[mman] feature 'cpf': undefined
[mman] method 'minit': ok
[mman] method 'malloc': ok
[mman] method 'minit': ok
[mman] method 'mrealoc': undefined
[mman] --------------------------------------------
[mman] Analysed code in full.c
[mman] stmt2penvs:
       (1) s_1 (@line 29) -> e_4
       (1) s_4 (@line 49) -> e_2
       (1) s_5 (@line 50) -> e_2
       (1) s_7 (@line 54) -> e_2
       (1) s_8 (@line 58) -> e_2
       (1) s_9 (@line 59) -> e_2
       (1) s_10 (@line 60) -> e_2
       (1) s_12 (@line 63) -> e_2
       (1) s_13 (@line 64) -> e_2
       (1) s_14 (@line 65) -> e_2
       (1) s_15 (@line 67) -> e_2
       (1) s_18 (@line 76) -> e_2
       (1) s_19 (@line 76) -> e_2
       (1) s_20 (@line 76) -> e_2
       (1) s_22 (@line 76) -> e_2
       (1) s_24 (@line 76) -> e_2
       (1) s_25 (@line 76) -> e_2
       (1) s_26 (@line 76) -> e_2
       (1) s_27 (@line 77) -> e_2
       (1) s_29 (@line 77) -> e_2
       (1) s_30 (@line 78) -> e_2
       (1) s_31 (@line 79) -> e_2
       (1) s_33 (@line 80) -> e_2
       (1) s_34 (@line 89) -> e_2
       (1) s_35 (@line 90) -> e_2
       (1) s_39 (@line 76) -> e_2
       (1) s_40 (@line 76) -> e_2
       (1) s_41 (@line 103) -> e_2
       (1) s_42 (@line 104) -> e_2
       (1) s_44 (@line 105) -> e_2
       (1) s_45 (@line 106) -> e_2
       (1) s_46 (@line 107) -> e_2
       (1) s_47 (@line 109) -> e_2
       (1) s_50 (@line 120) -> e_1
       (1) s_51 (@line 132) -> e_1
       (1) s_52 (@line 132) -> e_1
       (1) s_53 (@line 132) -> e_1
       (1) s_55 (@line 132) -> e_1
       (1) s_56 (@line 132) -> e_1
       (1) s_57 (@line 133) -> e_1
       (1) s_59 (@line 133) -> e_1
       (1) s_61 (@line 134) -> e_1
       (1) s_62 (@line 135) -> e_1
       (1) s_63 (@line 136) -> e_1
       (1) s_64 (@line 137) -> e_1
       (1) s_66 (@line 139) -> e_1
       (1) s_67 (@line 140) -> e_1
       (1) s_68 (@line 142) -> e_1
       (1) s_69 (@line 144) -> e_1
       (1) s_71 (@line 148) -> e_1
       (1) s_73 (@line 132) -> e_1
       (1) s_74 (@line 132) -> e_1
       (1) s_75 (@line 158) -> e_1
       (1) s_77 (@line 167) -> e_0
       (1) s_78 (@line 168) -> e_0
       (1) s_79 (@line 172) -> e_0
       (1) s_80 (@line 174) -> e_0
       (1) s_81 (@line 176) -> e_0
       (1) s_82 (@line 177) -> e_0
       (1) s_85 (@line 8) -> e_3
       (1) s_86 (@line 8) -> e_3
       (1) s_87 (@line 9) -> e_3
       (1) s_88 (@line 10) -> e_3
       (1) s_89 (@line 11) -> e_3
       (1) s_90 (@line 12) -> e_3
       (1) s_91 (@line 13) -> e_3
       (1) s_92 (@line 14) -> e_3
       (1) s_93 (@line 15) -> e_3
       (1) s_95 (@line 30) -> e_4
       (1) s_97 (@line 68) -> e_2
       (1) s_98 (@line 92) -> e_2
       (1) s_99 (@line 110) -> e_2
       (1) s_101 (@line 148) -> e_1
       (1) s_102 (@line 158) -> e_1
       (1) s_104 (@line 179) -> e_0
       (1) s_106 (@line 15) -> e_3
[mman] ENVS:
       (1) pe_0 -> penv_0 = (2,
       [7]
       { 0> (0)__null; 1> (1)__hole; 2> (2)__hli; 3> (3)__hst; 4> (4)_heapstart; 5> (5)_heapend; 6> (6)memleft;})
       (1) pe_1 -> penv_1 = (2,
       [11]
       { 0> (0)__null; 1> (1)__hole; 2> (2)__hli; 3> (3)__hst; 4> (4)_heapstart; 5> (5)_heapend; 6> (6)memleft; 7> (7)f1676_nbytes; 8> (8)nxt; 9> (9)prev;
        10> (10)nunits;})
       (1) pe_2 -> penv_2 = (2,
       [11]
       { 0> (0)__null; 1> (1)__hole; 2> (2)__hli; 3> (3)__hst; 4> (4)_heapstart; 5> (5)_heapend; 6> (6)memleft; 7> (7)f1670_ap; 8> (8)nxt; 9> (9)prev;
        10> (10)f;})
       (1) pe_3 -> penv_3 = (2,
       [10]
       { 0> (0)__null; 1> (1)__hole; 2> (2)__hli; 3> (3)__hst; 4> (4)_heapstart; 5> (5)_heapend; 6> (6)memleft; 7> (7)man; 8> (8)p1; 9> (9)p2;
       })
       (1) pe_4 -> penv_4 = (2,
       [8]
       { 0> (0)__null; 1> (1)__hole; 2> (2)__hli; 3> (3)__hst; 4> (4)_heapstart; 5> (5)_heapend; 6> (6)memleft; 7> (7)f1665_str;})
[mman] --------------------------------------------
[mman] Analysing the application starting at 'MAIN'
[mman] --------------------------------------------
[mman] Analysing the application starting at 'MAIN'
[mman] DF:Computing initial state
[mman] DF:Initial_state_stmt (sid:85)
[mman] init_global: struct init
[mman] Exp:(struct hdr *)0
[mman] Exp:0
[mman] Exp:(unsigned int)0
[mman] Exp:0
[mman] init_global: struct init
[mman] Exp:(struct hdr *)0
[mman] Exp:0
[mman] Exp:(unsigned int)0
[mman] Exp:0
[mman] Exp:(short)0
[mman] Exp:0
[mman] DF:init_global_avals: fn(_heapstart),
[mman] DF:init_global_avals: csz(_heapstart),
[mman] DF:init_global_avals: fn(_heapend),
[mman] DF:init_global_avals: csz(_heapend),
[mman] DF:init_global_avals: memleft,
[mman] DF:init_global_aexps: 0,
[mman] DF:init_global_aexps: 0,
[mman] DF:init_global_aexps: 0,
[mman] DF:init_global_aexps: 0,
[mman] DF:init_global_aexps: 0,
[mman] DF:struct fiels : fn(_heapstart),
[mman] DF:struct fiels : csz(_heapstart),
[mman] DF:struct fiels : fn(_heapend),
[mman] DF:struct fiels : csz(_heapend),
[mman] DF:Computing global values
[mman] MV:init_globals
[mman] MV:do_alloc
[mman] -------------------do_alloc-------------------
[mman] MV:struct global vars: _heapstart
[mman] MV:struct global vars: _heapend
[mman] MV:struct fields functions: fn(_heapstart)
[mman] MV:struct fields functions: csz(_heapstart)
[mman] MV:struct fields functions: fn(_heapend)
[mman] MV:struct fields functions: csz(_heapend)
[mman] MV:penv: penv_3 = (2,
       [10]
       { 0> (0)__null; 1> (1)__hole; 2> (2)__hli; 3> (3)__hst; 4> (4)_heapstart; 5> (5)_heapend; 6> (6)memleft; 7> (7)man; 8> (8)p1; 9> (9)p2;
       })
[mman] initialise symbolic environment
[mman] create symbolic environment
[mman] adding global svars...
[mman] global svars added
[mman] MV:senv: senv_1 = @(0,penv_3,
       [4]
       { 1> (1)__null; 2> (2)__hole; 3> (3)__hli; 4> (4)__hst;}@)
[mman] MV:globally allocated vars: _heapstart
[mman] MV:creating new svar for struct variable: _heapstart...
[mman] MV:new svar created:(4)_heapstart
[mman] MV:creating new svar for feature : fn
[mman] MV:new feature svar created:(0)c4__fn
[mman] MV:creating new svar for feature : csz
[mman] MV:new feature svar created:(0)c4__csz
[mman] MV:globally allocated vars: _heapend
[mman] MV:creating new svar for struct variable: _heapend...
[mman] MV:new svar created:(5)_heapend
[mman] MV:creating new svar for feature : fn
[mman] MV:new feature svar created:(0)c5__fn
[mman] MV:creating new svar for feature : csz
[mman] MV:new feature svar created:(0)c5__csz
[mman] adding global svars...
[mman] global svars added
[mman] new senv: senv_2 = @(0,penv_3,
       [10]
       { 1> (1)__null; 2> (2)__hole; 3> (3)__hli; 4> (4)__hst; 5> (5)_heapstart; 6> (6)c4__fn; 7> (7)c4__csz; 8> (8)_heapend; 9> (9)c5__fn;
        10> (10)c5__csz;}@)
[mman] MV:creating shape value for struct variable: _heapstart
[mman] MV:get pv in penv
[mman] pv:(4)_heapstart
[mman] psvid: 4
[mman] get pv in sven
[mman] symbolic svar of pv:(5)_heapstart
[mman] ssvid: 5
[mman] get svfeat(fn) of symbolic pv.
[mman] get svfeat(csz) of symbolic pv.
[mman] fk list created
[mman] MV:creating shape value for struct variable: _heapend
[mman] MV:get pv in penv
[mman] pv:(5)_heapend
[mman] psvid: 5
[mman] get pv in sven
[mman] symbolic svar of pv:(8)_heapend
[mman] ssvid: 8
[mman] get svfeat(fn) of symbolic pv.
[mman] get svfeat(csz) of symbolic pv.
[mman] fk list created
[mman] old value  ({peid:3}Top)
[mman] new value:
         ({peid:2}eshape: (4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
        
       	 dwords:{eid_-1}bottom 
       )
[mman] -------------------do_alloc end-------------------
[mman] MV:do_assign
[mman] doing assign
[mman] do_assigns: fn(_heapstart):=0
[mman] do_assigns: csz(_heapstart):=0
[mman] do_assigns: fn(_heapend):=0
[mman] do_assigns: csz(_heapend):=0
[mman] do_assigns: memleft:=0
[mman] on ({peid:2}eshape: (4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
        
       	 dwords:{eid_-1}bottom 
       )
[mman] MV:do_assign_set, exsh:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:do_assign_set, dw value:{eid_-1}bottom
[mman] do_assign_one....
[mman] --------- 
        MV:evaluate alval:fn(_heapstart)
[mman] MSH:evalL afeat
[mman] ASYN:to_senv_lval ...
[mman] ASYN:is not location ...
[mman] ASYN:(4)_heapstart in penv
[mman] MSH:after to_senv_lval:sv_4 in penv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_4 on stack ...
[mman] MSH:location of 4 is 5...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:evalL is Some()
[mman] --------- 
        MV:evaluate alval:csz(_heapstart)
[mman] MSH:evalL afeat
[mman] ASYN:to_senv_lval ...
[mman] ASYN:is not location ...
[mman] ASYN:(4)_heapstart in penv
[mman] MSH:after to_senv_lval:sv_4 in penv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_4 on stack ...
[mman] MSH:location of 4 is 5...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:evalL is Some()
[mman] --------- 
        MV:evaluate alval:fn(_heapend)
[mman] MSH:evalL afeat
[mman] ASYN:to_senv_lval ...
[mman] ASYN:is not location ...
[mman] ASYN:(5)_heapend in penv
[mman] MSH:after to_senv_lval:sv_5 in penv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_5 on stack ...
[mman] MSH:location of 5 is 8...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:evalL is Some()
[mman] --------- 
        MV:evaluate alval:csz(_heapend)
[mman] MSH:evalL afeat
[mman] ASYN:to_senv_lval ...
[mman] ASYN:is not location ...
[mman] ASYN:(5)_heapend in penv
[mman] MSH:after to_senv_lval:sv_5 in penv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_5 on stack ...
[mman] MSH:location of 5 is 8...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:evalL is Some()
[mman] --------- 
        MV:evaluate alval:memleft
[mman] ASYN:to_senv_lval ...
[mman] ASYN:is not location ...
[mman] ASYN:(6)memleft in penv
[mman] MSH:after to_senv_lval:sv_6 in penv
[mman] MV:evalL is Some()
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] evalE is Some()
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] evalE is Some()
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] evalE is Some()
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] evalE is Some()
[mman] --------- 
        evaluate aexp:0
[mman] MSH:evalE_lval, ACst ...
[mman] evalE is Some()
[mman] MV:after evaluation of loction:
[mman] MV: do_assign_one sv_6:=0
[mman] MV: do_assign_one csz(sv_8):=0
[mman] MV: do_assign_one fn(sv_8):=0
[mman] MV: do_assign_one csz(sv_5):=0
[mman] MV: do_assign_one fn(sv_5):=0
[mman] MV:do mutate
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] left alval:fn(sv_5)
[mman] MSH:left value svi:5 ...
[mman] MSH:svinfoL:(5)_heapstart
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:after mutation, dw value:{eid_-1}bottom
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] left alval:csz(sv_5)
[mman] MSH:left value svi:5 ...
[mman] MSH:svinfoL:(5)_heapstart
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:after mutation, dw value:{eid_-1}bottom
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] left alval:fn(sv_8)
[mman] MSH:left value svi:8 ...
[mman] MSH:svinfoL:(8)_heapend
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:after mutation, dw value:{eid_-1}bottom
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] left alval:csz(sv_8)
[mman] MSH:left value svi:8 ...
[mman] MSH:svinfoL:(8)_heapend
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:after mutation, dw value:{eid_-1}bottom
[mman] MV:eshape mutate
[mman] MSH:old eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] left alval:sv_6
[mman] MSH:left value svi:6 ...
[mman] MSH:svinfoL:(6)c4__fn
[mman] MSH:mutate_meminfo...
[mman] MSH:aexp:0
[mman] MV:after mutation, eshape value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:after mutation, dw value:{eid_-1}bottom
[mman] MV:finish mutating, Some
[mman] MV:after do_assign_one
[mman] MV:after assign_set is Some()
[mman] MV:assign_done, 
        value: ({peid:2}eshape: (4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
        
       	 dwords:{eid_-1}bottom 
       )
[mman] MV:meet_exp....
[mman] MV:meet_exp_set....
[mman] MV:meet_exp_set, exsh:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:meet_exp_set, dw value:{eid_-1}bottom
[mman] MV:meet_exp_one....
[mman] MSH:do guard...
[mman] MSH:constraints:__hli>=0
[mman] MSH:do guard_one...
[mman] MSH:constraint:__hli>=0
[mman] MSH:evalE:__hli op 0
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: __hli...
[mman] MSH:evalE_lval AVar:(3)__hli
[mman] MSH:evalE_svid...svid 3
[mman] MSH:evalE_svid, no need to look in stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE:sv_3 op 0
[mman] MSH:evalE, no unfolding needed....
[mman] ASYN:get_saddr_lval...Some
[mman] MSH:sv_3>=0
[mman] MSH: a constraint on locations, only comparison accepted...
[mman] MSH:guard_geq...
[mman] MSH:guard_geq, Some g ...
[mman] MSH:guard_one return constraint:sv_3>=0
[mman] MSH:guard_one return value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:no need to unfold...
[mman] MV:no constraints on data...
[mman] MV:dw is Bot...
[mman] MV:after meet_exp_set is Some()
[mman] MV:finish meet_exp.
[mman] MV:meet_exp....
[mman] MV:meet_exp_set....
[mman] MV:meet_exp_set, exsh:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:meet_exp_set, dw value:{eid_-1}bottom
[mman] MV:meet_exp_one....
[mman] MSH:do guard...
[mman] MSH:constraints:man>=0
[mman] MSH:constraints:p1>=0
[mman] MSH:constraints:p2>=0
[mman] MSH:do guard_one...
[mman] MSH:constraint:man>=0
[mman] MSH:evalE:man op 0
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: man...
[mman] MSH:evalE_lval AVar:(7)man
[mman] MSH:evalE_svid...svid 7
[mman] ENV:penv_getvtyp, vi:(7)f1670_ap
[mman] MSH:evalE_svid, inspect the stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE:sv_7 op 0
[mman] MSH:evalE, no unfolding needed....
[mman] ASYN:get_saddr_lval...Some
[mman] MSH:sv_7>=0
[mman] MSH: a constraint on locations, only comparison accepted...
[mman] MSH:guard_geq...
[mman] MSH:guard_geq, Some g ...
[mman] MSH:guard_one return constraint:sv_7>=0
[mman] MSH:guard_one return value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MSH:do guard_one...
[mman] MSH:constraint:p1>=0
[mman] MSH:evalE:p1 op 0
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: p1...
[mman] MSH:evalE_lval AVar:(8)p1
[mman] MSH:evalE_svid...svid 8
[mman] ENV:penv_getvtyp, vi:(8)nxt
[mman] MSH:evalE_svid, inspect the stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE:sv_8 op 0
[mman] MSH:evalE, no unfolding needed....
[mman] ASYN:get_saddr_lval...Some
[mman] MSH:sv_8>=0
[mman] MSH: a constraint on locations, only comparison accepted...
[mman] MSH:guard_geq...
[mman] MSH:guard_geq, Some g ...
[mman] MSH:guard_one return constraint:sv_8>=0
[mman] MSH:guard_one return value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MSH:do guard_one...
[mman] MSH:constraint:p2>=0
[mman] MSH:evalE:p2 op 0
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: p2...
[mman] MSH:evalE_lval AVar:(9)p2
[mman] MSH:evalE_svid...svid 9
[mman] ENV:penv_getvtyp, vi:(9)prev
[mman] MSH:evalE_svid, inspect the stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE:sv_9 op 0
[mman] MSH:evalE, no unfolding needed....
[mman] ASYN:get_saddr_lval...Some
[mman] MSH:sv_9>=0
[mman] MSH: a constraint on locations, only comparison accepted...
[mman] MSH:guard_geq...
[mman] MSH:guard_geq, Some g ...
[mman] MSH:guard_one return constraint:sv_9>=0
[mman] MSH:guard_one return value:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:no need to unfold...
[mman] MV:no constraints on data...
[mman] MV:dw is Bot...
[mman] MV:after meet_exp_set is Some()
[mman] MV:finish meet_exp.
[mman] DF:initial_state {peid:2}eshape: (4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
        
       	 dwords:{eid_-1}bottom
[mman] transfer_stmt_main sid: 85 on 
        {peid:2}eshape: (4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
        
       	 dwords:{eid_-1}bottom 
       '
[mman] s.skind: Instr2
[mman] function called: laInit'
[mman] do_call: laInit(...)
[mman] Unify penvs 3, 0
[mman] MV:meet_exp....
[mman] MV:meet_exp_set....
[mman] MV:meet_exp_set, exsh:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:meet_exp_set, dw value:{eid_-1}bottom
[mman] MV:meet_exp_one....
[mman] MSH:do guard...
[mman] MV:no need to unfold...
[mman] MV:after meet_exp_set is Some()
[mman] MV:finish meet_exp.
[mman] transfer_stmt_main sid: 77 on 
        {peid:2}eshape: (4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
        
       	 dwords:{eid_-1}bottom 
       '
[mman] s.skind: Instr2
[mman] function called: sbrk'
[mman] transfer_sbrk: /* sid:77 */
                      _heapstart.ptr = (struct hdr *)sbrk(65360);
       on {peid:2}eshape: (4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
        
       	 dwords:{eid_-1}bottom
[mman] Exp:65360
[mman] feature2exph: _heapstart->ptr to fn
[mman] transform_sbrk: fn(_heapstart):=__hole[sbrk(65360)]
[mman] to: fn(_heapstart):=__hli
[mman] to: __hli:=(__hli + 65360)
[mman] doing assign
[mman] do_assigns: fn(_heapstart):=__hli
[mman] do_assigns: __hli:=(__hli + 65360)
[mman] on ({peid:2}eshape: (4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
        
       	 dwords:{eid_-1}bottom 
       )
[mman] MV:do_assign_set, exsh:(4)_heapstart |-> (5)_heapstart, (5)_heapend |-> (8)_heapend, 
       chd((5)_heapstart)[fn:(0)__null,csz:(0)__null,] * chd((8)_heapend)[fn:(0)__null,csz:(0)__null,] * emp,
[mman] MV:do_assign_set, dw value:{eid_-1}bottom
[mman] do_assign_one....
[mman] --------- 
        MV:evaluate alval:fn(_heapstart)
[mman] MSH:evalL afeat
[mman] ASYN:to_senv_lval ...
[mman] ASYN:is not location ...
[mman] ASYN:(4)_heapstart in penv
[mman] MSH:after to_senv_lval:sv_4 in penv
[mman] MSH:evalL_feat
[mman] MSH:find location of sv_4 on stack ...
[mman] MSH:location of 4 is 5...
[mman] MSH:evalL_atom...
[mman] MSH:atom Chd or Chk, eval is feature...
[mman] MV:evalL is Some()
[mman] --------- 
        MV:evaluate alval:__hli
[mman] ASYN:to_senv_lval ...
[mman] ASYN:is not location ...
[mman] ASYN:(1)__hole in penv
[mman] MSH:after to_senv_lval:sv_1 in penv
[mman] MV:evalL is Some()
[mman] --------- 
        evaluate aexp:__hli
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: __hli...
[mman] MSH:evalE_lval AVar:(3)__hli
[mman] MSH:evalE_svid...svid 3
[mman] MSH:evalE_svid, no need to look in stack...
[mman] evalE is Some()
[mman] --------- 
        evaluate aexp:(__hli + 65360)
[mman] MSH:evalE_lval, ALval ...
[mman] MSH:evalE_lval lv: __hli...
[mman] MSH:evalE_lval AVar:(3)__hli
[mman] MSH:evalE_svid...svid 3
[mman] MSH:evalE_svid, no need to look in stack...
[mman] MSH:evalE_lval, ACst ...
[mman] MSH:after evalE is Some ...
[mman] ASYN:get_saddr_lval...Some
[mman] evalE is None
[mman] MV:after evaluation of loction:
[mman] MV: do_assign_one sv_1:=sv_3
[mman] failure: Unexpected exception.
                Please submit bug report (Ref. "Invalid_argument("List.iter2")").
[kernel] Current source was: /Users/yuezhuang/Documents/projects/mem copy/bench/la/lamalloc.c:167
         The full backtrace is:
         Raised at file "src/kernel_services/plugin_entry_points/log.ml", line 583, characters 30-31
         Called from file "src/kernel_services/plugin_entry_points/log.ml", line 577, characters 9-16
         Re-raised at file "src/kernel_services/plugin_entry_points/log.ml", line 580, characters 15-16
         Called from file "queue.ml", line 134, characters 6-20
         Called from file "src/kernel_internals/runtime/boot.ml", line 37, characters 4-20
         Called from file "src/kernel_services/cmdline_parameters/cmdline.ml", line 787, characters 2-9
         Called from file "src/kernel_services/cmdline_parameters/cmdline.ml", line 817, characters 18-64
         Called from file "src/kernel_services/cmdline_parameters/cmdline.ml", line 228, characters 4-8
         
         Plug-in mman aborted: internal error.
         Please report as 'crash' at http://bts.frama-c.com/.
         Your Frama-C version is Aluminium-20160501.
         Note that a version and a backtrace alone often do not contain enough
         information to understand the bug. Guidelines for reporting bugs are at:
         http://bts.frama-c.com/dokuwiki/doku.php?id=mantis:frama-c:bug_reporting_guidelines
